<Project>

    <!-- [Addendum variables] -->

    <!-- $(KnsoftArch) equals to the default solution configuration names (Win32 -> x86) -->
    <PropertyGroup Condition="'$(Platform)' != 'Win32'">
        <KnsoftArch>$(Platform)</KnsoftArch>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Platform)' == 'Win32'">
        <KnsoftArch>x86</KnsoftArch>
    </PropertyGroup>

    <!-- [Overwrite defaults] -->

    <!-- Recommended defaults and support for source files with the same name -->
    <ItemDefinitionGroup>
        <ClCompile>
            <WarningLevel>Level3</WarningLevel>
            <LanguageStandard>stdcpplatest</LanguageStandard>
            <LanguageStandard_C>stdclatest</LanguageStandard_C>
            <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
            <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>
        </ClCompile>
        <Link>
            <GenerateDebugInformation>true</GenerateDebugInformation>
        </Link>
        <MASM>
            <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>
        </MASM>
        <!-- FIXME: CL preprocessor may break this
        <MARMASM>
            <ObjectFileName>$(IntDir)%(RelativeDir)</ObjectFileName>
        </MARMASM>
        -->
    </ItemDefinitionGroup>

    <!-- Enable Safe SEH for MASM Release x86, as well as CL default -->
    <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
        <MASM>
            <UseSafeExceptionHandlers>true</UseSafeExceptionHandlers>
        </MASM>
    </ItemDefinitionGroup>

    <!-- Use static runtime libraries -->
    <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
        <ClCompile>
            <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
        </ClCompile>
    </ItemDefinitionGroup>
    <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
        <ClCompile>
            <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Include ntdll.lib by default -->
    <ItemDefinitionGroup>
        <Link>
            <AdditionalDependencies>ntdll.lib;%(AdditionalDependencies)</AdditionalDependencies>
        </Link>
    </ItemDefinitionGroup>

    <!-- Disable LTCG and ignore default libraries for LIB -->
    <ItemDefinitionGroup Condition="'$(ConfigurationType)' == 'StaticLibrary'">
        <Lib>
            <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
            <LinkTimeCodeGeneration>false</LinkTimeCodeGeneration>
        </Lib>
    </ItemDefinitionGroup>

    <!-- [Customize builds] -->

    <!-- Import some sheets before or after Microsoft.Cpp.* files -->
    <PropertyGroup>
        <ForceImportAfterCppDefaultProps>$(MsbuildThisFileDirectory)\Directory.Build.AfterCppDefault.props</ForceImportAfterCppDefaultProps>
        <ForceImportAfterCppProps>$(MsbuildThisFileDirectory)\Directory.Build.AfterCpp.props</ForceImportAfterCppProps>
    </PropertyGroup>

    <!-- Import $(MSBuildProjectName).Build.(props/targets) if exists -->
    <Import Project="$(MSBuildProjectDirectory)\$(MSBuildProjectName).Build.props" Condition="Exists('$(MSBuildProjectDirectory)\$(MSBuildProjectName).Build.props')"/>
    <Import Project="$(MSBuildProjectDirectory)\$(MSBuildProjectName).Build.targets" Condition="Exists('$(MSBuildProjectDirectory)\$(MSBuildProjectName).Build.targets')"/>
    
    <!-- Import outer Directory.Build.props if exists -->
    <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" Condition="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../')) != ''" />

</Project>